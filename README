Quick start
-----------

The following assumes that you are not installing the burp server via a
distribution's package management system.

You need to compile burp on a unix-based operating system first. Make sure that
you have openssl, zlib, librsync, uthash and yajl libraries and development
libraries installed.

With debian or ubuntu, this command should install them for you:
  apt-get install make pkg-config check g++ \
	librsync-dev libz-dev libssl-dev uthash-dev libyajl-dev

With RHEL or CentOS, this command should install them for you:
  yum install make gcc gcc-c++ bzip2 pkgconfig \
        librsync-devel libzip-devel openssl-devel uthash-devel yajl-devel \
        libacl-devel ncurses-devel openssl-perl

If you are checking out directly from git, you will also need to get some
extra packages in order to generate the configure file:

Debian / Ubunutu:
  apt-get install autoconf automake libtool

RHEL / CentOS:
  yum install autoconf automake libtool

Change to the burp source directory and run:
  autoreconf -vif
  ./configure --prefix=/usr --sysconfdir=/etc/burp --localstatedir=/var

Then run "make". All being well, burp will compile successfully. Run "make
install" and then "make install-configs" as root to install.
The "make install-configs" command will overwrite configuration files in
/etc/burp, so you will probably not want to do that if you have an existing
burp installation.

Start the burp server with this command:
  burp -c /etc/burp/burp-server.conf

By default, the server will fork into the background and run as a daemon. To
stay in the foreground, add the '-F' option. The first time that the server
runs, its startup will be a slower than usual because it needs to generate its
SSL certificates. However, this will probably only be noticeable on old
machines.

The server is now ready for clients to connect to it.


Unix client
-----------

If you are going to run the client on the same machine on which you installed
the server, the client will already be installed because the client is built
into the same binary (the behaviour of the binary depends upon the
configuration file that is given to it). Otherwise, you can either go through
the 'configure/make/make install' sequence on the client machine, or get burp
via your distribution's package manager.

The example client configuration file is /etc/burp/burp.conf.
It will backup /home by default.

You can either force a backup by hand:
  burp -a b

Or add a regular cron job like the following to /etc/cron.d/burp (or
equivalent). This makes the client ask the server every twenty minutes whether
it is yet time for a new backup. It is probably a good idea to change the
numbers for each client, in order to spread the load a bit:
MAILTO=
7,27,47 * * * * root    /usr/sbin/burp -a t

Whether or not an instance of the client results in an actual backup depends
upon the timer settings in the server config files.


Windows client
--------------

Pick the 32-bit or 64-bit Burp installer as appropriate - visit
http://burp.grke.org/ to find one of them.

If you need to compile one yourself, instructions can be found at
src/win32/README in the source package.

The Windows installer will ask you for the address of your server, the client
name, and the client password. Burp will then install its files to:
C:/Program Files/Burp
(Note that the "C:/Program Files/" part may differ, depending on Windows'
language settings).
If you need to change client configuration settings, the file can be found at:
C:/Program Files/Burp/burp.conf
It will be configured to backup "C:/Users", if it existed at installation
time, or otherwise "C:/Documents and Settings".

A Windows Scheduler task will have been installed and will be configured to
run every 20 minutes from the time of the installation. Whether or not this
results in an actual backup depends upon the timer settings in the server
config files.

To force a backup by hand, start the burp client from within its directory:
cd "C:\Program Files\Burp\bin"
burp.exe -a b
If you are running Windows 7, you might need to start the command prompt with
"Run as Administrator".


Mac client
----------

The installation on a Mac is performed via Homebrew (http://brew.sh).
After installing Homebrew, with an admin account you just have to open a
Terminal and type the command:
"brew install burp"
Burp will be installed in the subdirectories of /usr/local (see Homebrew
website for details on the subdirectories).

You'll then have to edit the client configuration file:
/usr/local/etc/burp/burp.conf

At the minimum, you'll have to change the line:
include = /home
to something like:
include = /Users


Automated deploy with ansible
-----------------------------

For ansible roles to manage burp, please see:
https://github.com/grke/burp/wiki/automated-deploy-and-maintenance


For more help, see the man page - type 'man burp'.
